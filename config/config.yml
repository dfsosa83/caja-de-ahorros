# Income Estimator ML Configuration

# Environment settings
environment: development
debug: true

# Data configuration
data:
  raw_data_path: "data/raw"
  processed_data_path: "data/processed"
  external_data_path: "data/external"
  train_test_split: 0.2
  random_state: 42
  validation_split: 0.2

# Model configuration
model:
  algorithms:
    - "random_forest"
    - "gradient_boosting"
    - "logistic_regression"
    - "svm"
    - "neural_network"
  hyperparameter_tuning: true
  tuning_method: "optuna"  # optuna, grid_search, random_search
  n_trials: 100
  cv_folds: 5
  scoring_metric: "accuracy"
  model_registry_path: "models"
  mlflow_tracking_uri: "sqlite:///mlflow.db"
  mlflow_experiment_name: "income_estimator"

# API configuration
api:
  host: "0.0.0.0"
  port: 8000
  reload: false
  workers: 1
  log_level: "info"
  cors_origins:
    - "*"
  cors_methods:
    - "*"
  cors_headers:
    - "*"
  rate_limit_requests: 100
  rate_limit_window: 60

# Logging configuration
logging:
  level: "INFO"
  format: "{time:YYYY-MM-DD HH:mm:ss} | {level} | {name}:{function}:{line} | {message}"
  rotation: "1 day"
  retention: "30 days"
  log_file: "logs/app.log"
  enable_json_logs: false

# Monitoring configuration
monitoring:
  enable_metrics: true
  metrics_port: 9090
  health_check_interval: 30
  model_drift_threshold: 0.1
  data_drift_threshold: 0.1

# Feature engineering settings
features:
  numerical_features:
    - "age"
    - "education_num"
    - "hours_per_week"
    - "capital_gain"
    - "capital_loss"
  
  categorical_features:
    - "education"
    - "occupation"
    - "marital_status"
    - "relationship"
    - "race"
    - "sex"
    - "native_country"
  
  target_column: "income"
  
  preprocessing:
    numerical_scaling: "standard"  # standard, minmax, robust
    categorical_encoding: "onehot"  # onehot, label, target
    handle_missing: "median"  # median, mean, mode, drop
    outlier_detection: true
    outlier_method: "iqr"  # iqr, zscore, isolation_forest

# Hyperparameter search spaces
hyperparameters:
  random_forest:
    n_estimators: [100, 200, 300, 500]
    max_depth: [10, 20, 30, null]
    min_samples_split: [2, 5, 10]
    min_samples_leaf: [1, 2, 4]
    max_features: ["sqrt", "log2", null]
  
  gradient_boosting:
    n_estimators: [100, 200, 300]
    learning_rate: [0.01, 0.1, 0.2]
    max_depth: [3, 5, 7]
    subsample: [0.8, 0.9, 1.0]
    max_features: ["sqrt", "log2", null]
  
  logistic_regression:
    C: [0.1, 1.0, 10.0, 100.0]
    penalty: ["l1", "l2", "elasticnet"]
    solver: ["liblinear", "saga"]
    max_iter: [1000, 2000, 5000]
  
  svm:
    C: [0.1, 1.0, 10.0, 100.0]
    kernel: ["linear", "rbf", "poly"]
    gamma: ["scale", "auto", 0.001, 0.01, 0.1]
  
  neural_network:
    hidden_layer_sizes: [[100], [100, 50], [200, 100], [300, 200, 100]]
    activation: ["relu", "tanh", "logistic"]
    alpha: [0.0001, 0.001, 0.01]
    learning_rate: ["constant", "adaptive"]
    max_iter: [1000, 2000, 3000]

# Evaluation metrics
evaluation:
  primary_metric: "accuracy"
  metrics:
    - "accuracy"
    - "precision"
    - "recall"
    - "f1_score"
    - "roc_auc"
    - "confusion_matrix"
  
  cross_validation:
    method: "stratified_kfold"
    n_splits: 5
    shuffle: true
    random_state: 42

# Data validation rules
validation:
  numerical_ranges:
    age: [16, 100]
    education_num: [1, 16]
    hours_per_week: [1, 100]
    capital_gain: [0, 1000000]
    capital_loss: [0, 1000000]
  
  categorical_values:
    education:
      - "Bachelors"
      - "Some-college"
      - "11th"
      - "HS-grad"
      - "Prof-school"
      - "Assoc-acdm"
      - "Assoc-voc"
      - "9th"
      - "7th-8th"
      - "12th"
      - "Masters"
      - "1st-4th"
      - "10th"
      - "Doctorate"
      - "5th-6th"
      - "Preschool"
    
    sex:
      - "Male"
      - "Female"
    
    marital_status:
      - "Married-civ-spouse"
      - "Divorced"
      - "Never-married"
      - "Separated"
      - "Widowed"
      - "Married-spouse-absent"
      - "Married-AF-spouse"

# Security settings
security:
  api_key_required: false
  rate_limiting_enabled: true
  cors_enabled: true
  https_only: false
  
# Cache settings
cache:
  enabled: false
  backend: "memory"  # memory, redis
  ttl: 3600  # seconds
  max_size: 1000  # number of items

# Database settings (optional)
database:
  enabled: false
  url: "postgresql://postgres:postgres@localhost:5432/income_estimator"
  pool_size: 5
  max_overflow: 10
