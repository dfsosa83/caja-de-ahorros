# =============================================================================
# Income Prediction API - Docker Compose Configuration
# =============================================================================
# 
# This docker-compose file provides easy development and production deployment
# for the Income Prediction API service.
#
# Usage:
#   Development: docker-compose up --build
#   Production:  docker-compose -f docker-compose.yml -f docker-compose.prod.yml up
# =============================================================================

version: '3.8'

services:
  # Main API service
  income-prediction-api:
    build:
      context: ..  # Build from parent directory to include models/
      dockerfile: api-service/Dockerfile
    container_name: income-prediction-api
    ports:
      - "8000:8000"
    environment:
      # API Configuration
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_DEBUG=false
      - API_LOG_LEVEL=INFO
      
      # Model Configuration
      - API_MODEL_PATH=models/production/final_production_model_nested_cv.pkl
      - API_MAX_BATCH_SIZE=1000
      - API_PREDICTION_TIMEOUT=30
      
      # Security (configure for production)
      - API_CORS_ORIGINS=["*"]
    
    volumes:
      # Mount your models directory (read-only for security)
      - ../models:/app/models:ro
      - ../data:/app/data:ro
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Resource limits (adjust based on your needs)
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: income-prediction-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - income-prediction-api
    restart: unless-stopped
    profiles:
      - production

# Networks
networks:
  default:
    name: income-prediction-network

# Volumes for persistent data (if needed)
volumes:
  api_logs:
    driver: local
